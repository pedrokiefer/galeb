load("@rules_java//java:defs.bzl", "java_binary", "java_library", "java_test")

java_library(
    name = "kratos-library",
    srcs = glob(
        ["src/main/java/io/galeb/kratos/**/*.java"],
        exclude = ["src/main/java/io/galeb/kratos/Application.java"],
    ),
    deps = [
        "//newcore",
        "@maven//:javax_jms_javax_jms_api",
        "@maven//:org_apache_activemq_artemis_commons",
        "@maven//:org_apache_activemq_artemis_core_client",
        "@maven//:org_apache_activemq_artemis_jms_client",
        "@maven//:org_apache_logging_log4j_log4j_api",
        "@maven//:org_apache_logging_log4j_log4j_core",
        "@maven//:org_apache_logging_log4j_log4j_jcl",
        "@maven//:org_apache_logging_log4j_log4j_slf4j_impl",
        "@maven//:org_springframework_boot_spring_boot_autoconfigure",
        "@maven//:org_springframework_data_spring_data_commons",
        "@maven//:org_springframework_data_spring_data_jpa",
        "@maven//:org_springframework_data_spring_data_redis",
        "@maven//:org_springframework_data_spring_data_rest_core",
        "@maven//:org_springframework_spring_beans",
        "@maven//:org_springframework_spring_context",
        "@maven//:org_springframework_spring_core",
        "@maven//:org_springframework_spring_jms",
        "@maven//:org_springframework_spring_tx",
        "@maven//:org_springframework_spring_web",
    ],
)

java_binary(
    name = "kratos",
    srcs = ["src/main/java/io/galeb/kratos/Application.java"],
    main_class = "io.galeb.kratos.Application",
    resources = glob(["src/main/resources/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = [
        "//kratos:kratos-library",
        "@maven//:org_springframework_boot_spring_boot",
        "@maven//:org_springframework_boot_spring_boot_autoconfigure",
        "@maven//:org_springframework_data_spring_data_jpa",
        "@maven//:org_springframework_spring_context",
    ],
)

java_test(
    name = "kratos-test",
    srcs = ["src/main/java/io/galeb/kratos/Application.java"] + glob(["src/test/java/**/*.java"]),
    resources = glob(["src/test/resources/**/*.java"]),
    test_class = "io.galeb.kratos.ApplicationTest",
    visibility = ["//visibility:public"],
    deps = [
        "//kratos:kratos-library",
        "//newcore",
        "@maven//:javax_jms_javax_jms_api",
        "@maven//:javax_persistence_javax_persistence_api",
        "@maven//:junit_junit",
        "@maven//:org_apache_activemq_artemis_commons",
        "@maven//:org_apache_activemq_artemis_core_client",
        "@maven//:org_apache_activemq_artemis_jms_client",
        "@maven//:org_apache_logging_log4j_log4j_api",
        "@maven//:org_apache_logging_log4j_log4j_core",
        "@maven//:org_apache_logging_log4j_log4j_jcl",
        "@maven//:org_apache_logging_log4j_log4j_slf4j_impl",
        "@maven//:org_flywaydb_flyway_core",
        "@maven//:org_mockito_mockito_all",
        "@maven//:org_springframework_boot_spring_boot",
        "@maven//:org_springframework_boot_spring_boot_autoconfigure",
        "@maven//:org_springframework_boot_spring_boot_starter_data_jpa",
        "@maven//:org_springframework_boot_spring_boot_test",
        "@maven//:org_springframework_boot_spring_boot_test_autoconfigure",
        "@maven//:org_springframework_data_spring_data_commons",
        "@maven//:org_springframework_data_spring_data_jpa",
        "@maven//:org_springframework_data_spring_data_redis",
        "@maven//:org_springframework_data_spring_data_rest_core",
        "@maven//:org_springframework_spring_beans",
        "@maven//:org_springframework_spring_context",
        "@maven//:org_springframework_spring_core",
        "@maven//:org_springframework_spring_jms",
        "@maven//:org_springframework_spring_orm",
        "@maven//:org_springframework_spring_test",
        "@maven//:org_springframework_spring_tx",
        "@maven//:org_springframework_spring_web",
    ],
)
